(function(f,l){typeof exports=="object"&&typeof module<"u"?l(exports):typeof define=="function"&&define.amd?define(["exports"],l):(f=typeof globalThis<"u"?globalThis:f||self,l(f.EmpressStore={}))})(this,function(f){"use strict";const d=class d{constructor(t,e={}){this._data=t,this._listeners=new Set,this._middleware=[],this._validators=[],this._middleware=e.middleware||[],this._validators=e.validators||[]}addMiddleware(t){return this._middleware.push(t),()=>{const e=this._middleware.indexOf(t);e!==-1&&this._middleware.splice(e,1)}}addMiddlewares(t){const e=t.map(i=>this.addMiddleware(i));return()=>e.forEach(i=>i())}addValidator(t){return this._validators.push(t),()=>{const e=this._validators.indexOf(t);e!==-1&&this._validators.splice(e,1)}}addValidators(t){const e=t.map(i=>this.addValidator(i));return()=>e.forEach(i=>i())}get middleware(){return[...this._middleware]}get rawState(){return this._data}get state(){return new Proxy(this._data,{get:(t,e)=>{const i=t[e];return i instanceof Object?new Proxy(i,{}):i},set:()=>(console.warn("Direct state mutation is not allowed. Use setState instead."),!1)})}subscribe(t){return this._listeners.add(t),()=>this._listeners.delete(t)}validateUpdate(t){for(const e of this._validators){const i=e(t);if(i!==!0)throw new Error(typeof i=="string"?i:"Validation failed")}}update(t){const e=t(this.state);this.validateUpdate(e);const i=(p,c)=>({...p,...c});let s=i(this._data,e);for(const p of this._middleware)s=p(s,e,i);this._data=s,this.notifyListeners()}transaction(t){const e=this.state;try{this._data=t.apply(this.state),this.notifyListeners()}catch(i){throw this._data=t.rollback(e),this.notifyListeners(),i}}simpleTransaction(t){const e=t(this.state),i={};Object.keys(e).forEach(s=>{i[s]=this.state[s]}),this.transaction({apply:s=>({...s,...e}),rollback:s=>({...s,...i})})}reset(t={}){this._data=t,this.notifyListeners()}cloneState(){return structuredClone(this._data)}notifyListeners(){if(d._isNotifying){d._pendingNotifications.add(this);return}d._notificationScheduled||(d._notificationScheduled=!0,queueMicrotask(()=>{d._isNotifying=!0;try{d._pendingNotifications.forEach(t=>{t._listeners.forEach(e=>e(t._data))})}finally{d._isNotifying=!1,d._notificationScheduled=!1,d._pendingNotifications.clear()}})),d._pendingNotifications.add(this)}};d._pendingNotifications=new Set,d._isNotifying=!1,d._notificationScheduled=!1;let l=d;const y=new Set;function m(u,t){let e,i=!1;const s=Array.isArray(u)?u:[u],p=()=>{const a=s.map(n=>n.state);return Array.isArray(u)?a:a[0]},c=s.map(a=>a.subscribe(()=>{i||(e=void 0)})),r={get value(){if(i)throw new Error("Cannot access disposed computed value");if(y.has(r))throw new Error("Circular dependency detected in computed properties");if(e===void 0){y.add(r);try{e=t(p())}finally{y.delete(r)}}return e},dispose(){i||(i=!0,c.forEach(a=>a()),e=void 0)}};return typeof window<"u"&&window.addEventListener("unload",()=>r.dispose()),r}function _(u,t={}){const e=u.reduce((c,r)=>({...c,...r.state}),{});class i extends l{cleanup(){p.forEach(r=>r())}update(r){const a=r(this.state);this.validateUpdate(a),u.forEach(n=>{const h={};let w=!1;for(const o in a)o in n.state&&n.state[o]!==a[o]&&(h[o]=a[o],w=!0);w&&n.validateUpdate(h)}),super.update(n=>a),u.forEach(n=>{const h={};let w=!1;for(const o in a)o in n.state&&n.state[o]!==a[o]&&(h[o]=a[o],w=!0);if(w){const o=n.update;n.update=function(v){l.prototype.update.call(this,v)},n.update(()=>h),n.update=o}})}}const s=new i(e,{middleware:t.middleware||[],validators:t.validators||[]}),p=u.map(c=>{const r=c.update;return c.update=function(a){const n=this.state,h=a(n);this.validateUpdate(h),s.update(w=>h)},()=>{c.update=r}});return s}f.Store=l,f.computed=m,f.mixStores=_,Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});
